{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","SORT_FIELD_ALPHABETICALLY","alphabetically","SORT_FIELD_LENGTH","length","App","useState","default","isSorted","setSorted","isReversed","setReversed","preparedGoods","goods","sort","elem1","elem2","localeCompare","reverse","goodsPrepared","className","type","cn","onClick","prev","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,gCAAAA,E,gBAAAA,E,YAAAA,M,KAML,IAAME,EAA4BF,EAASG,eACrCC,EAAoBJ,EAASK,OA8B5B,IAAMC,EAAgB,WAC3B,MAA8BC,mBAASP,EAASQ,SAAhD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EAhCR,SACEC,EACAL,EACAE,GAEA,IAAIE,EAAa,YAAOC,GAExB,OAAQL,GACN,KAAKT,EAASG,eACZU,EAAcE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACzD,MAEF,KAAKjB,EAASK,OACZQ,EAAcE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMX,OAASY,EAAMZ,UAC1D,MAEF,QACEQ,EAAa,YAAOC,GAQxB,OAJIH,GACFE,EAAcM,UAGTN,EAOeO,CAAcnB,EAAiBQ,EAAUE,GAE/D,OACE,sBAAKU,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,SACA,UACA,CAAE,WAAYrB,IAA8BO,IAGhDe,QAAS,kBAAMd,EAAUR,IAT3B,iCAcA,wBACEoB,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,WAAYnB,IAAsBK,IAGxCe,QAAS,kBAAMd,EAAUN,IAT3B,4BAcA,wBACEkB,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,YAAaZ,IAGnBa,QAAS,kBAAMZ,GAAY,SAAAa,GAAI,OAAKA,MATtC,sBAcEd,GAA2B,KAAbF,IACd,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPZ,GAAY,GACZF,EAAUV,EAASQ,UALvB,sBAaJ,6BACGK,EAAca,KAAI,SAAAC,GAAI,OACrB,oBAAI,UAAQ,OAAZ,SAAoBA,aCvH9BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a93499f5.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport React, { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  alphabetically = 'alphabetically',\n  length = 'length',\n  default = '',\n}\n\nconst SORT_FIELD_ALPHABETICALLY = SortType.alphabetically;\nconst SORT_FIELD_LENGTH = SortType.length;\n\nfunction goodsPrepared(\n  goods: string[],\n  isSorted: SortType,\n  isReversed: boolean,\n) {\n  let preparedGoods = [...goods];\n\n  switch (isSorted) {\n    case SortType.alphabetically:\n      preparedGoods.sort((elem1, elem2) => elem1.localeCompare(elem2));\n      break;\n\n    case SortType.length:\n      preparedGoods.sort((elem1, elem2) => elem1.length - elem2.length);\n      break;\n\n    default:\n      preparedGoods = [...goods];\n      break;\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isSorted, setSorted] = useState(SortType.default);\n  const [isReversed, setReversed] = useState(false);\n\n  const preparedGoods = goodsPrepared(goodsFromServer, isSorted, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-info',\n              { 'is-light': SORT_FIELD_ALPHABETICALLY !== isSorted },\n            )\n          }\n          onClick={() => setSorted(SORT_FIELD_ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-success',\n              { 'is-light': SORT_FIELD_LENGTH !== isSorted },\n            )\n          }\n          onClick={() => setSorted(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-warning',\n              { 'is-light': !isReversed },\n            )\n          }\n          onClick={() => setReversed(prev => !prev)}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || isSorted !== '') && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setReversed(false);\n              setSorted(SortType.default);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {preparedGoods.map(good => (\n          <li data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}